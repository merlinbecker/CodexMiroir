### **Codex Caché – Minimalistische Dual-FIFO-Task-App**

Erstelle eine **Progressive Web App (PWA)** namens **Codex Caché**.  
Sie ist ein radikal minimalistischer persönlicher **Task- und Meeting-Manager** im _CloudWizard_-Universum. Ziel: **mentales Offloading, Fokus, strikte Reihenfolge**.

#### **Kontext**

Codex Caché ist der „verborgene Kodex“ – zwei getrennte, endlose Ströme von Aufgaben (privat und beruflich), die wie magische Schriftrollen nebeneinander existieren. Es ersetzt parallele Backlogs durch **zwei streng getrennte FIFO-Listen**, die per Schalter gewechselt werden (Dark-/Light-Modus als visueller Hinweis).

#### **UI-Grundsätze**

- **Minimalismus pur:** kein Dashboard, keine Animationen.
    
- **Prominent:** immer **nur der aktuelle Task** der aktiven Liste (Titel, Beschreibung, Restzeit).
    
- **Darunter:** **scrollbare FIFO-Liste** der aktiven Kategorie; nur Ansicht, keine Drag-&-Drop-Funktion.
    
- **Wechsel per Schalter:** zwischen **beruflichem Backlog (Darkmode)** und **privatem Backlog (Lightmode)**.
    
- **Eingabe:** Sprach- oder Textfeld für neue Tasks. Alles andere läuft automatisch.
    
- **Farbschema:**
    
    - **Beruflich/Darkmode:** Nachtblau/Anthrazit + silberne Runen.
        
    - **Privat/Lightmode:** Creme/Weiß + violette Runen.
        

#### **Funktionale Kernpunkte**

- **Zwei getrennte Backlogs:** beruflich und privat, per Schalter umschaltbar.
    
- **Strict FIFO:** Tasks werden in Reihenfolge abgearbeitet; **keine freie Verschiebung**.
    
- **Kein Wartend-Status:** wenn Task nicht bearbeitbar → **automatisch ans Ende der Liste** verschoben.
    
- **Auto-Chunking:** LLM-Agent teilt neue Aufgaben in 3,5-h-Einheiten.
    
- **Deadlines & Auto-Repriorisierung:** automatische, agentengesteuerte Reihung anhand Slack (Zeit bis Deadline); kein manuelles Hochziehen.
    
- **Status minimal:** `aktiv` und `abgeschlossen`.
    
- **Reporting:** einfacher Export aus der Zeitreihe (z. B. CSV) für Auftraggeber-Transparenz.
    
- **Sichere Tokens:** getrennte Keys für Lese-/Schreibrechte, lange zufällige URLs.
    

#### **Technik**

- **Frontend:** extrem schlanke PWA (HTML/CSS/JS oder React/Tailwind).
    
- **Backend/Agent:** via MCP; Agent übernimmt Chunking, Slack-Berechnung, Repriorisierung.
    
- **Geräteoptimierung:** Rabbit R1 (240×282px) und Evenreality G1 (600×200px).
    

#### **Zielbild**

Codex Caché erzwingt **Single-Task-Fokus** und **klare Reihenfolge** in **zwei klar getrennten Streams**. Keine freie Manipulation, keine Overfeatures. Nur Aufgabenfluss, Klarheit und mentale Entlastung.
